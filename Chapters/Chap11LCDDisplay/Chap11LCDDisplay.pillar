!! Lesson 10 - LCD Display

In previous lessons, we learned how to control LEDs and to use a button to interact with LEDs. We learned also how to use the I2C sensors to read the temperature, humidity, pressure, and x, y, z-axis. Also, we saw how to use a no I2C sensor, an ultrasonic sensor. Now we will learn how to use an LCD Display without I2C. 

!!! What do we need?

In this lesson, we will use a setup with an LCD Display 1602.

!!!! Components

- 1 Raspberry Pi connected to your network (wired or wireless)
- 1 Breadboard
- 1 LCD Display 1602 
- 1 Potentiometer (10K ohms)
- Jumper wires

!!! Experimental theory

Before constructing any circuit, you must know the parameters of the components in the circuit, such as their operating voltage, operating circuit, etc.

!!!! The LCD Display 1602

!!!! How the LCD 1602 works?

!!! Experimental procedure

Now we will build the circuit. This circuit consists of three sensors and a power supply (the Rasp).

- Connect the Ground PIN from Raspberry on breadboard blue rail (-). In this experiment we will use the PIN6 (Ground);
- Then connect the 5V (PIN2) pin in the red rail (+). 
- Now push the LCD 1602 on breadboard;
- Push the potentiometer on breadboard;
- And insert the jumper wires connecting the LCD Display in the Potentiometer and breadboard, as the scheme shown in Figure *@physicalLCD*.

Figure *@physicalLCD* shows how the electric connection is made.

+Physical sensors connection.>figures/pharothings-lcd-board.png|width=60|label=physicalLCD+

!!! Connecting remotely

Through your local Pharo image, let’s connect to Pharo image by running on Raspberry, enable the auto-refresh feature of the inspector, and open the inspector.
Run this code in your local playground:

[[[
remotePharo := TlpRemoteIDE connectTo: (TCPAddress ip: #[193 51 236 212] port: 40423)
GTInspector enableStepRefresh.
remoteBoard := remotePharo evaluate: [ RpiBoard3B current].
remoteBoard inspect.
]]]

!!! Experimental code

In your inspect window (Inspector on a PotRemoteBoard), let’s create the instances of the LCD Display. 

[[[
lcd := board installDevice: PotLCD1602Device new.
]]]

As we saw before, we can inspect the remote object to see some properties and methods. Let's use the method ==message:== to send some message to LCD Display. To break line you can use "/n". And to clear the LCD you can use the method ==clear==:

[[[
lcd message: 'Hello everybody!\Pharo is cool!'. 
lcd clear.
]]]